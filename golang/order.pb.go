// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: order.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *OrderDetail `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetOrder() *OrderDetail {
	if x != nil {
		return x.Order
	}
	return nil
}

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint64                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                  string                              `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	ClosedAt               string                              `protobuf:"bytes,3,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	CreatedAt              string                              `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              string                              `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Number                 uint64                              `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Note                   string                              `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
	Token                  string                              `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	Gateway                string                              `protobuf:"bytes,9,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Test                   bool                                `protobuf:"varint,10,opt,name=test,proto3" json:"test,omitempty"`
	TotalPrice             string                              `protobuf:"bytes,11,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	SubtotalPrice          string                              `protobuf:"bytes,12,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price,omitempty"`
	TotalWeight            uint32                              `protobuf:"varint,14,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	TotalTax               string                              `protobuf:"bytes,15,opt,name=total_tax,json=totalTax,proto3" json:"total_tax,omitempty"`
	TaxesIncluded          bool                                `protobuf:"varint,16,opt,name=taxes_included,json=taxesIncluded,proto3" json:"taxes_included,omitempty"`
	Currency               string                              `protobuf:"bytes,17,opt,name=currency,proto3" json:"currency,omitempty"`
	FinancialStatus        string                              `protobuf:"bytes,18,opt,name=financial_status,json=financialStatus,proto3" json:"financial_status,omitempty"`
	Confirmed              bool                                `protobuf:"varint,19,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	TotalDiscounts         string                              `protobuf:"bytes,20,opt,name=total_discounts,json=totalDiscounts,proto3" json:"total_discounts,omitempty"`
	TotalLineItemsPrice    string                              `protobuf:"bytes,21,opt,name=total_line_items_price,json=totalLineItemsPrice,proto3" json:"total_line_items_price,omitempty"`
	CartToken              string                              `protobuf:"bytes,22,opt,name=cart_token,json=cartToken,proto3" json:"cart_token,omitempty"`
	BuyerAcceptsMarketing  bool                                `protobuf:"varint,32,opt,name=buyer_accepts_marketing,json=buyerAcceptsMarketing,proto3" json:"buyer_accepts_marketing,omitempty"`
	Name                   string                              `protobuf:"bytes,33,opt,name=name,proto3" json:"name,omitempty"`
	ReferringSite          string                              `protobuf:"bytes,34,opt,name=referring_site,json=referringSite,proto3" json:"referring_site,omitempty"`
	LandingSite            string                              `protobuf:"bytes,35,opt,name=landing_site,json=landingSite,proto3" json:"landing_site,omitempty"`
	CancelledAt            string                              `protobuf:"bytes,36,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	CancelReason           string                              `protobuf:"bytes,37,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	TotalPriceUsd          string                              `protobuf:"bytes,38,opt,name=total_price_usd,json=totalPriceUsd,proto3" json:"total_price_usd,omitempty"`
	CheckoutToken          string                              `protobuf:"bytes,39,opt,name=checkout_token,json=checkoutToken,proto3" json:"checkout_token,omitempty"`
	Reference              string                              `protobuf:"bytes,40,opt,name=reference,proto3" json:"reference,omitempty"`
	UserId                 uint64                              `protobuf:"varint,41,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LocationId             uint64                              `protobuf:"varint,42,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	SourceIdentifier       string                              `protobuf:"bytes,43,opt,name=source_identifier,json=sourceIdentifier,proto3" json:"source_identifier,omitempty"`
	SourceUrl              string                              `protobuf:"bytes,44,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	ProcessedAt            string                              `protobuf:"bytes,45,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	Phone                  string                              `protobuf:"bytes,46,opt,name=phone,proto3" json:"phone,omitempty"`
	CustomerLocale         string                              `protobuf:"bytes,47,opt,name=customer_locale,json=customerLocale,proto3" json:"customer_locale,omitempty"`
	AppId                  uint64                              `protobuf:"varint,48,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BrowserIp              string                              `protobuf:"bytes,49,opt,name=browser_ip,json=browserIp,proto3" json:"browser_ip,omitempty"`
	LandingSiteRef         string                              `protobuf:"bytes,50,opt,name=landing_site_ref,json=landingSiteRef,proto3" json:"landing_site_ref,omitempty"`
	OrderNumber            uint64                              `protobuf:"varint,51,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	DiscountApplications   []*OrderDetail_DiscountApplication  `protobuf:"bytes,52,rep,name=discount_applications,json=discountApplications,proto3" json:"discount_applications,omitempty"`
	DiscountCodes          []*OrderDetail_DiscountCode         `protobuf:"bytes,53,rep,name=discount_codes,json=discountCodes,proto3" json:"discount_codes,omitempty"`
	NoteAttributes         []*OrderDetail_NoteAttribute        `protobuf:"bytes,54,rep,name=note_attributes,json=noteAttributes,proto3" json:"note_attributes,omitempty"`
	PaymentGatewayNames    []string                            `protobuf:"bytes,55,rep,name=payment_gateway_names,json=paymentGatewayNames,proto3" json:"payment_gateway_names,omitempty"`
	ProcessingMethod       string                              `protobuf:"bytes,56,opt,name=processing_method,json=processingMethod,proto3" json:"processing_method,omitempty"`
	CheckoutId             uint64                              `protobuf:"varint,57,opt,name=checkout_id,json=checkoutId,proto3" json:"checkout_id,omitempty"`
	SourceName             uint64                              `protobuf:"varint,58,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	FulfillmentStatus      string                              `protobuf:"bytes,59,opt,name=fulfillment_status,json=fulfillmentStatus,proto3" json:"fulfillment_status,omitempty"`
	TaxLines               []*OrderDetail_TaxLine              `protobuf:"bytes,60,rep,name=tax_lines,json=taxLines,proto3" json:"tax_lines,omitempty"`
	Tags                   string                              `protobuf:"bytes,61,opt,name=tags,proto3" json:"tags,omitempty"`
	ContactEmail           string                              `protobuf:"bytes,62,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	OrderStatusUrl         string                              `protobuf:"bytes,63,opt,name=order_status_url,json=orderStatusUrl,proto3" json:"order_status_url,omitempty"`
	PresentmentCurrency    string                              `protobuf:"bytes,64,opt,name=presentment_currency,json=presentmentCurrency,proto3" json:"presentment_currency,omitempty"`
	TotalLineItemsPriceSet *OrderDetail_TotalLineItemsPriceSet `protobuf:"bytes,65,opt,name=total_line_items_price_set,json=totalLineItemsPriceSet,proto3" json:"total_line_items_price_set,omitempty"`
	TotalDiscountsSet      *OrderDetail_TotalDiscountsSet      `protobuf:"bytes,66,opt,name=total_discounts_set,json=totalDiscountsSet,proto3" json:"total_discounts_set,omitempty"`
	TotalShippingPriceSet  *OrderDetail_TotalShippingPriceSet  `protobuf:"bytes,67,opt,name=total_shipping_price_set,json=totalShippingPriceSet,proto3" json:"total_shipping_price_set,omitempty"`
	SubtotalPriceSet       *OrderDetail_SubTotalPriceSet       `protobuf:"bytes,68,opt,name=subtotal_price_set,json=subtotalPriceSet,proto3" json:"subtotal_price_set,omitempty"`
	TotalPriceSet          *OrderDetail_TotalPriceSet          `protobuf:"bytes,69,opt,name=total_price_set,json=totalPriceSet,proto3" json:"total_price_set,omitempty"`
	TotalTaxSet            *OrderDetail_TotalTaxSet            `protobuf:"bytes,70,opt,name=total_tax_set,json=totalTaxSet,proto3" json:"total_tax_set,omitempty"`
	LineItems              []*OrderDetail_LineItem             `protobuf:"bytes,71,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	Fulfillments           []*OrderDetail_Fulfillment          `protobuf:"bytes,72,rep,name=fulfillments,proto3" json:"fulfillments,omitempty"`
	Refunds                []*OrderDetail_Refund               `protobuf:"bytes,73,rep,name=refunds,proto3" json:"refunds,omitempty"`
	TotalTipReceived       string                              `protobuf:"bytes,74,opt,name=total_tip_received,json=totalTipReceived,proto3" json:"total_tip_received,omitempty"`
	OriginalTotalDutiesSet *OrderDetail_OriginalTotalDutiesSet `protobuf:"bytes,76,opt,name=original_total_duties_set,json=originalTotalDutiesSet,proto3" json:"original_total_duties_set,omitempty"`
	CurrentTotalDutiesSet  *OrderDetail_CurrentTotalDutiesSet  `protobuf:"bytes,77,opt,name=current_total_duties_set,json=currentTotalDutiesSet,proto3" json:"current_total_duties_set,omitempty"`
	AdminGraphqlApiId      string                              `protobuf:"bytes,78,opt,name=admin_graphql_api_id,json=adminGraphqlApiId,proto3" json:"admin_graphql_api_id,omitempty"`
	ShippingLines          []*OrderDetail_ShippingLine         `protobuf:"bytes,79,rep,name=shipping_lines,json=shippingLines,proto3" json:"shipping_lines,omitempty"`
	ShippingAddress        *OrderDetail_ShippingAddress        `protobuf:"bytes,80,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	Customer               *OrderDetail_Customer               `protobuf:"bytes,81,opt,name=customer,proto3" json:"customer,omitempty"`
	DeviceId               uint64                              `protobuf:"varint,82,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OrderDetail) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

func (x *OrderDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderDetail) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *OrderDetail) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *OrderDetail) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderDetail) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OrderDetail) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *OrderDetail) GetTest() bool {
	if x != nil {
		return x.Test
	}
	return false
}

func (x *OrderDetail) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

func (x *OrderDetail) GetSubtotalPrice() string {
	if x != nil {
		return x.SubtotalPrice
	}
	return ""
}

func (x *OrderDetail) GetTotalWeight() uint32 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *OrderDetail) GetTotalTax() string {
	if x != nil {
		return x.TotalTax
	}
	return ""
}

func (x *OrderDetail) GetTaxesIncluded() bool {
	if x != nil {
		return x.TaxesIncluded
	}
	return false
}

func (x *OrderDetail) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderDetail) GetFinancialStatus() string {
	if x != nil {
		return x.FinancialStatus
	}
	return ""
}

func (x *OrderDetail) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *OrderDetail) GetTotalDiscounts() string {
	if x != nil {
		return x.TotalDiscounts
	}
	return ""
}

func (x *OrderDetail) GetTotalLineItemsPrice() string {
	if x != nil {
		return x.TotalLineItemsPrice
	}
	return ""
}

func (x *OrderDetail) GetCartToken() string {
	if x != nil {
		return x.CartToken
	}
	return ""
}

func (x *OrderDetail) GetBuyerAcceptsMarketing() bool {
	if x != nil {
		return x.BuyerAcceptsMarketing
	}
	return false
}

func (x *OrderDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDetail) GetReferringSite() string {
	if x != nil {
		return x.ReferringSite
	}
	return ""
}

func (x *OrderDetail) GetLandingSite() string {
	if x != nil {
		return x.LandingSite
	}
	return ""
}

func (x *OrderDetail) GetCancelledAt() string {
	if x != nil {
		return x.CancelledAt
	}
	return ""
}

func (x *OrderDetail) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *OrderDetail) GetTotalPriceUsd() string {
	if x != nil {
		return x.TotalPriceUsd
	}
	return ""
}

func (x *OrderDetail) GetCheckoutToken() string {
	if x != nil {
		return x.CheckoutToken
	}
	return ""
}

func (x *OrderDetail) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *OrderDetail) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderDetail) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *OrderDetail) GetSourceIdentifier() string {
	if x != nil {
		return x.SourceIdentifier
	}
	return ""
}

func (x *OrderDetail) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *OrderDetail) GetProcessedAt() string {
	if x != nil {
		return x.ProcessedAt
	}
	return ""
}

func (x *OrderDetail) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderDetail) GetCustomerLocale() string {
	if x != nil {
		return x.CustomerLocale
	}
	return ""
}

func (x *OrderDetail) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *OrderDetail) GetBrowserIp() string {
	if x != nil {
		return x.BrowserIp
	}
	return ""
}

func (x *OrderDetail) GetLandingSiteRef() string {
	if x != nil {
		return x.LandingSiteRef
	}
	return ""
}

func (x *OrderDetail) GetOrderNumber() uint64 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

func (x *OrderDetail) GetDiscountApplications() []*OrderDetail_DiscountApplication {
	if x != nil {
		return x.DiscountApplications
	}
	return nil
}

func (x *OrderDetail) GetDiscountCodes() []*OrderDetail_DiscountCode {
	if x != nil {
		return x.DiscountCodes
	}
	return nil
}

func (x *OrderDetail) GetNoteAttributes() []*OrderDetail_NoteAttribute {
	if x != nil {
		return x.NoteAttributes
	}
	return nil
}

func (x *OrderDetail) GetPaymentGatewayNames() []string {
	if x != nil {
		return x.PaymentGatewayNames
	}
	return nil
}

func (x *OrderDetail) GetProcessingMethod() string {
	if x != nil {
		return x.ProcessingMethod
	}
	return ""
}

func (x *OrderDetail) GetCheckoutId() uint64 {
	if x != nil {
		return x.CheckoutId
	}
	return 0
}

func (x *OrderDetail) GetSourceName() uint64 {
	if x != nil {
		return x.SourceName
	}
	return 0
}

func (x *OrderDetail) GetFulfillmentStatus() string {
	if x != nil {
		return x.FulfillmentStatus
	}
	return ""
}

func (x *OrderDetail) GetTaxLines() []*OrderDetail_TaxLine {
	if x != nil {
		return x.TaxLines
	}
	return nil
}

func (x *OrderDetail) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *OrderDetail) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *OrderDetail) GetOrderStatusUrl() string {
	if x != nil {
		return x.OrderStatusUrl
	}
	return ""
}

func (x *OrderDetail) GetPresentmentCurrency() string {
	if x != nil {
		return x.PresentmentCurrency
	}
	return ""
}

func (x *OrderDetail) GetTotalLineItemsPriceSet() *OrderDetail_TotalLineItemsPriceSet {
	if x != nil {
		return x.TotalLineItemsPriceSet
	}
	return nil
}

func (x *OrderDetail) GetTotalDiscountsSet() *OrderDetail_TotalDiscountsSet {
	if x != nil {
		return x.TotalDiscountsSet
	}
	return nil
}

func (x *OrderDetail) GetTotalShippingPriceSet() *OrderDetail_TotalShippingPriceSet {
	if x != nil {
		return x.TotalShippingPriceSet
	}
	return nil
}

func (x *OrderDetail) GetSubtotalPriceSet() *OrderDetail_SubTotalPriceSet {
	if x != nil {
		return x.SubtotalPriceSet
	}
	return nil
}

func (x *OrderDetail) GetTotalPriceSet() *OrderDetail_TotalPriceSet {
	if x != nil {
		return x.TotalPriceSet
	}
	return nil
}

func (x *OrderDetail) GetTotalTaxSet() *OrderDetail_TotalTaxSet {
	if x != nil {
		return x.TotalTaxSet
	}
	return nil
}

func (x *OrderDetail) GetLineItems() []*OrderDetail_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *OrderDetail) GetFulfillments() []*OrderDetail_Fulfillment {
	if x != nil {
		return x.Fulfillments
	}
	return nil
}

func (x *OrderDetail) GetRefunds() []*OrderDetail_Refund {
	if x != nil {
		return x.Refunds
	}
	return nil
}

func (x *OrderDetail) GetTotalTipReceived() string {
	if x != nil {
		return x.TotalTipReceived
	}
	return ""
}

func (x *OrderDetail) GetOriginalTotalDutiesSet() *OrderDetail_OriginalTotalDutiesSet {
	if x != nil {
		return x.OriginalTotalDutiesSet
	}
	return nil
}

func (x *OrderDetail) GetCurrentTotalDutiesSet() *OrderDetail_CurrentTotalDutiesSet {
	if x != nil {
		return x.CurrentTotalDutiesSet
	}
	return nil
}

func (x *OrderDetail) GetAdminGraphqlApiId() string {
	if x != nil {
		return x.AdminGraphqlApiId
	}
	return ""
}

func (x *OrderDetail) GetShippingLines() []*OrderDetail_ShippingLine {
	if x != nil {
		return x.ShippingLines
	}
	return nil
}

func (x *OrderDetail) GetShippingAddress() *OrderDetail_ShippingAddress {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

func (x *OrderDetail) GetCustomer() *OrderDetail_Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *OrderDetail) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type OrderDetail_DiscountApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Title            string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Value            string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	ValueType        string `protobuf:"bytes,5,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	AllocationMethod string `protobuf:"bytes,6,opt,name=allocation_method,json=allocationMethod,proto3" json:"allocation_method,omitempty"`
	TargetSelection  string `protobuf:"bytes,7,opt,name=target_selection,json=targetSelection,proto3" json:"target_selection,omitempty"`
	TargetType       string `protobuf:"bytes,8,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
}

func (x *OrderDetail_DiscountApplication) Reset() {
	*x = OrderDetail_DiscountApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_DiscountApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_DiscountApplication) ProtoMessage() {}

func (x *OrderDetail_DiscountApplication) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_DiscountApplication.ProtoReflect.Descriptor instead.
func (*OrderDetail_DiscountApplication) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OrderDetail_DiscountApplication) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetAllocationMethod() string {
	if x != nil {
		return x.AllocationMethod
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetTargetSelection() string {
	if x != nil {
		return x.TargetSelection
	}
	return ""
}

func (x *OrderDetail_DiscountApplication) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

type OrderDetail_TaxLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string                         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Price            string                         `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Rate             float32                        `protobuf:"fixed32,3,opt,name=rate,proto3" json:"rate,omitempty"`
	PriceSet         *OrderDetail_PriceSet          `protobuf:"bytes,4,opt,name=price_set,json=priceSet,proto3" json:"price_set,omitempty"`
	TotalDiscountSet *OrderDetail_TotalDiscountsSet `protobuf:"bytes,5,opt,name=total_discount_set,json=totalDiscountSet,proto3" json:"total_discount_set,omitempty"`
}

func (x *OrderDetail_TaxLine) Reset() {
	*x = OrderDetail_TaxLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_TaxLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_TaxLine) ProtoMessage() {}

func (x *OrderDetail_TaxLine) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_TaxLine.ProtoReflect.Descriptor instead.
func (*OrderDetail_TaxLine) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 1}
}

func (x *OrderDetail_TaxLine) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderDetail_TaxLine) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderDetail_TaxLine) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *OrderDetail_TaxLine) GetPriceSet() *OrderDetail_PriceSet {
	if x != nil {
		return x.PriceSet
	}
	return nil
}

func (x *OrderDetail_TaxLine) GetTotalDiscountSet() *OrderDetail_TotalDiscountsSet {
	if x != nil {
		return x.TotalDiscountSet
	}
	return nil
}

type OrderDetail_PriceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_PriceSet) Reset() {
	*x = OrderDetail_PriceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_PriceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_PriceSet) ProtoMessage() {}

func (x *OrderDetail_PriceSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_PriceSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_PriceSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 2}
}

func (x *OrderDetail_PriceSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_PriceSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_DiscountCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *OrderDetail_DiscountCode) Reset() {
	*x = OrderDetail_DiscountCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_DiscountCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_DiscountCode) ProtoMessage() {}

func (x *OrderDetail_DiscountCode) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_DiscountCode.ProtoReflect.Descriptor instead.
func (*OrderDetail_DiscountCode) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 3}
}

func (x *OrderDetail_DiscountCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderDetail_DiscountCode) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderDetail_DiscountCode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OrderDetail_NoteAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OrderDetail_NoteAttribute) Reset() {
	*x = OrderDetail_NoteAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_NoteAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_NoteAttribute) ProtoMessage() {}

func (x *OrderDetail_NoteAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_NoteAttribute.ProtoReflect.Descriptor instead.
func (*OrderDetail_NoteAttribute) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 4}
}

func (x *OrderDetail_NoteAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDetail_NoteAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OrderDetail_TotalLineItemsPriceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_TotalLineItemsPriceSet) Reset() {
	*x = OrderDetail_TotalLineItemsPriceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_TotalLineItemsPriceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_TotalLineItemsPriceSet) ProtoMessage() {}

func (x *OrderDetail_TotalLineItemsPriceSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_TotalLineItemsPriceSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_TotalLineItemsPriceSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 5}
}

func (x *OrderDetail_TotalLineItemsPriceSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_TotalLineItemsPriceSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_TotalDiscountsSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_TotalDiscountsSet) Reset() {
	*x = OrderDetail_TotalDiscountsSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_TotalDiscountsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_TotalDiscountsSet) ProtoMessage() {}

func (x *OrderDetail_TotalDiscountsSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_TotalDiscountsSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_TotalDiscountsSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 6}
}

func (x *OrderDetail_TotalDiscountsSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_TotalDiscountsSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_TotalShippingPriceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_TotalShippingPriceSet) Reset() {
	*x = OrderDetail_TotalShippingPriceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_TotalShippingPriceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_TotalShippingPriceSet) ProtoMessage() {}

func (x *OrderDetail_TotalShippingPriceSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_TotalShippingPriceSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_TotalShippingPriceSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 7}
}

func (x *OrderDetail_TotalShippingPriceSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_TotalShippingPriceSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_SubTotalPriceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_SubTotalPriceSet) Reset() {
	*x = OrderDetail_SubTotalPriceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_SubTotalPriceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_SubTotalPriceSet) ProtoMessage() {}

func (x *OrderDetail_SubTotalPriceSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_SubTotalPriceSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_SubTotalPriceSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 8}
}

func (x *OrderDetail_SubTotalPriceSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_SubTotalPriceSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_TotalPriceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_TotalPriceSet) Reset() {
	*x = OrderDetail_TotalPriceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_TotalPriceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_TotalPriceSet) ProtoMessage() {}

func (x *OrderDetail_TotalPriceSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_TotalPriceSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_TotalPriceSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 9}
}

func (x *OrderDetail_TotalPriceSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_TotalPriceSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_TotalTaxSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_TotalTaxSet) Reset() {
	*x = OrderDetail_TotalTaxSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_TotalTaxSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_TotalTaxSet) ProtoMessage() {}

func (x *OrderDetail_TotalTaxSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_TotalTaxSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_TotalTaxSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 10}
}

func (x *OrderDetail_TotalTaxSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_TotalTaxSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         uint64                                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VariantId                  uint64                                     `protobuf:"varint,2,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Quantity                   uint32                                     `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Sku                        string                                     `protobuf:"bytes,4,opt,name=sku,proto3" json:"sku,omitempty"`
	VariantTitle               string                                     `protobuf:"bytes,5,opt,name=variant_title,json=variantTitle,proto3" json:"variant_title,omitempty"`
	Vendor                     string                                     `protobuf:"bytes,6,opt,name=vendor,proto3" json:"vendor,omitempty"`
	FulfillmentService         string                                     `protobuf:"bytes,7,opt,name=fulfillment_service,json=fulfillmentService,proto3" json:"fulfillment_service,omitempty"`
	ProductId                  uint64                                     `protobuf:"varint,8,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Taxable                    bool                                       `protobuf:"varint,9,opt,name=taxable,proto3" json:"taxable,omitempty"`
	GiftCard                   bool                                       `protobuf:"varint,10,opt,name=gift_card,json=giftCard,proto3" json:"gift_card,omitempty"`
	Name                       string                                     `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	VariantInventoryManagement string                                     `protobuf:"bytes,12,opt,name=variant_inventory_management,json=variantInventoryManagement,proto3" json:"variant_inventory_management,omitempty"`
	Properties                 []*OrderDetail_Property                    `protobuf:"bytes,13,rep,name=properties,proto3" json:"properties,omitempty"`
	ProductExists              bool                                       `protobuf:"varint,14,opt,name=product_exists,json=productExists,proto3" json:"product_exists,omitempty"`
	FulfillableQuantity        uint32                                     `protobuf:"varint,15,opt,name=fulfillable_quantity,json=fulfillableQuantity,proto3" json:"fulfillable_quantity,omitempty"`
	Grams                      uint32                                     `protobuf:"varint,16,opt,name=grams,proto3" json:"grams,omitempty"`
	Price                      string                                     `protobuf:"bytes,17,opt,name=price,proto3" json:"price,omitempty"`
	TotalDiscount              string                                     `protobuf:"bytes,18,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`
	FulfillmentStatus          string                                     `protobuf:"bytes,19,opt,name=fulfillment_status,json=fulfillmentStatus,proto3" json:"fulfillment_status,omitempty"`
	PriceSet                   *OrderDetail_PriceSet                      `protobuf:"bytes,20,opt,name=price_set,json=priceSet,proto3" json:"price_set,omitempty"`
	TotalDiscountSet           *OrderDetail_TotalDiscountsSet             `protobuf:"bytes,21,opt,name=total_discount_set,json=totalDiscountSet,proto3" json:"total_discount_set,omitempty"`
	DiscountAllocations        []*OrderDetail_LineItem_DiscountAllocation `protobuf:"bytes,22,rep,name=discount_allocations,json=discountAllocations,proto3" json:"discount_allocations,omitempty"`
	Duties                     []*OrderDetail_Duty                        `protobuf:"bytes,23,rep,name=duties,proto3" json:"duties,omitempty"`
	AdminGraphqlApiId          string                                     `protobuf:"bytes,24,opt,name=admin_graphql_api_id,json=adminGraphqlApiId,proto3" json:"admin_graphql_api_id,omitempty"`
	TaxLines                   []*OrderDetail_TaxLine                     `protobuf:"bytes,25,rep,name=tax_lines,json=taxLines,proto3" json:"tax_lines,omitempty"`
	RequiresShipping           bool                                       `protobuf:"varint,26,opt,name=requires_shipping,json=requiresShipping,proto3" json:"requires_shipping,omitempty"`
	Title                      string                                     `protobuf:"bytes,27,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *OrderDetail_LineItem) Reset() {
	*x = OrderDetail_LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_LineItem) ProtoMessage() {}

func (x *OrderDetail_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_LineItem.ProtoReflect.Descriptor instead.
func (*OrderDetail_LineItem) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 11}
}

func (x *OrderDetail_LineItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail_LineItem) GetVariantId() uint64 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *OrderDetail_LineItem) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderDetail_LineItem) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *OrderDetail_LineItem) GetVariantTitle() string {
	if x != nil {
		return x.VariantTitle
	}
	return ""
}

func (x *OrderDetail_LineItem) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *OrderDetail_LineItem) GetFulfillmentService() string {
	if x != nil {
		return x.FulfillmentService
	}
	return ""
}

func (x *OrderDetail_LineItem) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderDetail_LineItem) GetTaxable() bool {
	if x != nil {
		return x.Taxable
	}
	return false
}

func (x *OrderDetail_LineItem) GetGiftCard() bool {
	if x != nil {
		return x.GiftCard
	}
	return false
}

func (x *OrderDetail_LineItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDetail_LineItem) GetVariantInventoryManagement() string {
	if x != nil {
		return x.VariantInventoryManagement
	}
	return ""
}

func (x *OrderDetail_LineItem) GetProperties() []*OrderDetail_Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *OrderDetail_LineItem) GetProductExists() bool {
	if x != nil {
		return x.ProductExists
	}
	return false
}

func (x *OrderDetail_LineItem) GetFulfillableQuantity() uint32 {
	if x != nil {
		return x.FulfillableQuantity
	}
	return 0
}

func (x *OrderDetail_LineItem) GetGrams() uint32 {
	if x != nil {
		return x.Grams
	}
	return 0
}

func (x *OrderDetail_LineItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderDetail_LineItem) GetTotalDiscount() string {
	if x != nil {
		return x.TotalDiscount
	}
	return ""
}

func (x *OrderDetail_LineItem) GetFulfillmentStatus() string {
	if x != nil {
		return x.FulfillmentStatus
	}
	return ""
}

func (x *OrderDetail_LineItem) GetPriceSet() *OrderDetail_PriceSet {
	if x != nil {
		return x.PriceSet
	}
	return nil
}

func (x *OrderDetail_LineItem) GetTotalDiscountSet() *OrderDetail_TotalDiscountsSet {
	if x != nil {
		return x.TotalDiscountSet
	}
	return nil
}

func (x *OrderDetail_LineItem) GetDiscountAllocations() []*OrderDetail_LineItem_DiscountAllocation {
	if x != nil {
		return x.DiscountAllocations
	}
	return nil
}

func (x *OrderDetail_LineItem) GetDuties() []*OrderDetail_Duty {
	if x != nil {
		return x.Duties
	}
	return nil
}

func (x *OrderDetail_LineItem) GetAdminGraphqlApiId() string {
	if x != nil {
		return x.AdminGraphqlApiId
	}
	return ""
}

func (x *OrderDetail_LineItem) GetTaxLines() []*OrderDetail_TaxLine {
	if x != nil {
		return x.TaxLines
	}
	return nil
}

func (x *OrderDetail_LineItem) GetRequiresShipping() bool {
	if x != nil {
		return x.RequiresShipping
	}
	return false
}

func (x *OrderDetail_LineItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type OrderDetail_Fulfillment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt       string `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Id              uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	OrderId         uint64 `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status          string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TrackingCompany string `protobuf:"bytes,5,opt,name=tracking_company,json=trackingCompany,proto3" json:"tracking_company,omitempty"`
	TrackingNumber  string `protobuf:"bytes,6,opt,name=tracking_number,json=trackingNumber,proto3" json:"tracking_number,omitempty"`
	UpdatedAt       string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *OrderDetail_Fulfillment) Reset() {
	*x = OrderDetail_Fulfillment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Fulfillment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Fulfillment) ProtoMessage() {}

func (x *OrderDetail_Fulfillment) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Fulfillment.ProtoReflect.Descriptor instead.
func (*OrderDetail_Fulfillment) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 12}
}

func (x *OrderDetail_Fulfillment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderDetail_Fulfillment) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail_Fulfillment) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderDetail_Fulfillment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderDetail_Fulfillment) GetTrackingCompany() string {
	if x != nil {
		return x.TrackingCompany
	}
	return ""
}

func (x *OrderDetail_Fulfillment) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

func (x *OrderDetail_Fulfillment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type OrderDetail_Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId         uint64                               `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CreatedAt       string                               `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Note            string                               `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	UserId          uint64                               `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProcessedAt     string                               `protobuf:"bytes,6,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	RefundItemLines []*OrderDetail_Refund_RefundItemLine `protobuf:"bytes,7,rep,name=refund_item_lines,json=refundItemLines,proto3" json:"refund_item_lines,omitempty"`
}

func (x *OrderDetail_Refund) Reset() {
	*x = OrderDetail_Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Refund) ProtoMessage() {}

func (x *OrderDetail_Refund) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Refund.ProtoReflect.Descriptor instead.
func (*OrderDetail_Refund) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 13}
}

func (x *OrderDetail_Refund) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail_Refund) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderDetail_Refund) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderDetail_Refund) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderDetail_Refund) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderDetail_Refund) GetProcessedAt() string {
	if x != nil {
		return x.ProcessedAt
	}
	return ""
}

func (x *OrderDetail_Refund) GetRefundItemLines() []*OrderDetail_Refund_RefundItemLine {
	if x != nil {
		return x.RefundItemLines
	}
	return nil
}

type OrderDetail_OriginalTotalDutiesSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_OriginalTotalDutiesSet) Reset() {
	*x = OrderDetail_OriginalTotalDutiesSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_OriginalTotalDutiesSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_OriginalTotalDutiesSet) ProtoMessage() {}

func (x *OrderDetail_OriginalTotalDutiesSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_OriginalTotalDutiesSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_OriginalTotalDutiesSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 14}
}

func (x *OrderDetail_OriginalTotalDutiesSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_OriginalTotalDutiesSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_CurrentTotalDutiesSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_CurrentTotalDutiesSet) Reset() {
	*x = OrderDetail_CurrentTotalDutiesSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_CurrentTotalDutiesSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_CurrentTotalDutiesSet) ProtoMessage() {}

func (x *OrderDetail_CurrentTotalDutiesSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_CurrentTotalDutiesSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_CurrentTotalDutiesSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 15}
}

func (x *OrderDetail_CurrentTotalDutiesSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_CurrentTotalDutiesSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_ShippingLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *OrderDetail_ShippingLine) Reset() {
	*x = OrderDetail_ShippingLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_ShippingLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_ShippingLine) ProtoMessage() {}

func (x *OrderDetail_ShippingLine) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_ShippingLine.ProtoReflect.Descriptor instead.
func (*OrderDetail_ShippingLine) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 16}
}

func (x *OrderDetail_ShippingLine) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderDetail_ShippingLine) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderDetail_ShippingLine) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type OrderDetail_ShippingAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName    string  `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName     string  `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Address1     string  `protobuf:"bytes,3,opt,name=address1,proto3" json:"address1,omitempty"`
	Phone        string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	City         string  `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Zip          string  `protobuf:"bytes,6,opt,name=zip,proto3" json:"zip,omitempty"`
	Province     string  `protobuf:"bytes,7,opt,name=province,proto3" json:"province,omitempty"`
	Country      string  `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	Address2     string  `protobuf:"bytes,9,opt,name=address2,proto3" json:"address2,omitempty"`
	Company      string  `protobuf:"bytes,10,opt,name=company,proto3" json:"company,omitempty"`
	Latitude     float32 `protobuf:"fixed32,11,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float32 `protobuf:"fixed32,12,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Name         string  `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	CountryCode  string  `protobuf:"bytes,14,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	ProvinceCode string  `protobuf:"bytes,15,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
}

func (x *OrderDetail_ShippingAddress) Reset() {
	*x = OrderDetail_ShippingAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_ShippingAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_ShippingAddress) ProtoMessage() {}

func (x *OrderDetail_ShippingAddress) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_ShippingAddress.ProtoReflect.Descriptor instead.
func (*OrderDetail_ShippingAddress) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 17}
}

func (x *OrderDetail_ShippingAddress) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *OrderDetail_ShippingAddress) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *OrderDetail_ShippingAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *OrderDetail_ShippingAddress) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

type OrderDetail_Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        uint64                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                     string                               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	AcceptsMarketing          bool                                 `protobuf:"varint,3,opt,name=accepts_marketing,json=acceptsMarketing,proto3" json:"accepts_marketing,omitempty"`
	CreatedAt                 string                               `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 string                               `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FirstName                 string                               `protobuf:"bytes,6,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName                  string                               `protobuf:"bytes,7,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	OrdersCount               uint32                               `protobuf:"varint,8,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	State                     string                               `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	TotalSpent                string                               `protobuf:"bytes,10,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
	LastOrderId               uint64                               `protobuf:"varint,12,opt,name=last_order_id,json=lastOrderId,proto3" json:"last_order_id,omitempty"`
	Note                      string                               `protobuf:"bytes,13,opt,name=note,proto3" json:"note,omitempty"`
	VerifiedEmail             bool                                 `protobuf:"varint,14,opt,name=verified_email,json=verifiedEmail,proto3" json:"verified_email,omitempty"`
	MultipassIdentifier       string                               `protobuf:"bytes,15,opt,name=multipass_identifier,json=multipassIdentifier,proto3" json:"multipass_identifier,omitempty"`
	TaxExempt                 bool                                 `protobuf:"varint,16,opt,name=tax_exempt,json=taxExempt,proto3" json:"tax_exempt,omitempty"`
	Phone                     string                               `protobuf:"bytes,17,opt,name=phone,proto3" json:"phone,omitempty"`
	Tags                      string                               `protobuf:"bytes,18,opt,name=tags,proto3" json:"tags,omitempty"`
	LastOrderName             string                               `protobuf:"bytes,19,opt,name=last_order_name,json=lastOrderName,proto3" json:"last_order_name,omitempty"`
	Currency                  string                               `protobuf:"bytes,20,opt,name=currency,proto3" json:"currency,omitempty"`
	AcceptsMarketingUpdatedAt string                               `protobuf:"bytes,21,opt,name=accepts_marketing_updated_at,json=acceptsMarketingUpdatedAt,proto3" json:"accepts_marketing_updated_at,omitempty"`
	MarketingOptInLevel       string                               `protobuf:"bytes,22,opt,name=marketing_opt_in_level,json=marketingOptInLevel,proto3" json:"marketing_opt_in_level,omitempty"`
	AdminGraphqlApiId         string                               `protobuf:"bytes,23,opt,name=admin_graphql_api_id,json=adminGraphqlApiId,proto3" json:"admin_graphql_api_id,omitempty"`
	DefaultAddress            *OrderDetail_Customer_DefaultAddress `protobuf:"bytes,24,opt,name=default_address,json=defaultAddress,proto3" json:"default_address,omitempty"`
	TaxExemptions             []string                             `protobuf:"bytes,25,rep,name=tax_exemptions,json=taxExemptions,proto3" json:"tax_exemptions,omitempty"`
}

func (x *OrderDetail_Customer) Reset() {
	*x = OrderDetail_Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Customer) ProtoMessage() {}

func (x *OrderDetail_Customer) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Customer.ProtoReflect.Descriptor instead.
func (*OrderDetail_Customer) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 18}
}

func (x *OrderDetail_Customer) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail_Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OrderDetail_Customer) GetAcceptsMarketing() bool {
	if x != nil {
		return x.AcceptsMarketing
	}
	return false
}

func (x *OrderDetail_Customer) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderDetail_Customer) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *OrderDetail_Customer) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *OrderDetail_Customer) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *OrderDetail_Customer) GetOrdersCount() uint32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *OrderDetail_Customer) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OrderDetail_Customer) GetTotalSpent() string {
	if x != nil {
		return x.TotalSpent
	}
	return ""
}

func (x *OrderDetail_Customer) GetLastOrderId() uint64 {
	if x != nil {
		return x.LastOrderId
	}
	return 0
}

func (x *OrderDetail_Customer) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderDetail_Customer) GetVerifiedEmail() bool {
	if x != nil {
		return x.VerifiedEmail
	}
	return false
}

func (x *OrderDetail_Customer) GetMultipassIdentifier() string {
	if x != nil {
		return x.MultipassIdentifier
	}
	return ""
}

func (x *OrderDetail_Customer) GetTaxExempt() bool {
	if x != nil {
		return x.TaxExempt
	}
	return false
}

func (x *OrderDetail_Customer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderDetail_Customer) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *OrderDetail_Customer) GetLastOrderName() string {
	if x != nil {
		return x.LastOrderName
	}
	return ""
}

func (x *OrderDetail_Customer) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderDetail_Customer) GetAcceptsMarketingUpdatedAt() string {
	if x != nil {
		return x.AcceptsMarketingUpdatedAt
	}
	return ""
}

func (x *OrderDetail_Customer) GetMarketingOptInLevel() string {
	if x != nil {
		return x.MarketingOptInLevel
	}
	return ""
}

func (x *OrderDetail_Customer) GetAdminGraphqlApiId() string {
	if x != nil {
		return x.AdminGraphqlApiId
	}
	return ""
}

func (x *OrderDetail_Customer) GetDefaultAddress() *OrderDetail_Customer_DefaultAddress {
	if x != nil {
		return x.DefaultAddress
	}
	return nil
}

func (x *OrderDetail_Customer) GetTaxExemptions() []string {
	if x != nil {
		return x.TaxExemptions
	}
	return nil
}

type OrderDetail_ShopMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
}

func (x *OrderDetail_ShopMoney) Reset() {
	*x = OrderDetail_ShopMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_ShopMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_ShopMoney) ProtoMessage() {}

func (x *OrderDetail_ShopMoney) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_ShopMoney.ProtoReflect.Descriptor instead.
func (*OrderDetail_ShopMoney) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 19}
}

func (x *OrderDetail_ShopMoney) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderDetail_ShopMoney) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type OrderDetail_PresentmentMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
}

func (x *OrderDetail_PresentmentMoney) Reset() {
	*x = OrderDetail_PresentmentMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_PresentmentMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_PresentmentMoney) ProtoMessage() {}

func (x *OrderDetail_PresentmentMoney) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_PresentmentMoney.ProtoReflect.Descriptor instead.
func (*OrderDetail_PresentmentMoney) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 20}
}

func (x *OrderDetail_PresentmentMoney) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderDetail_PresentmentMoney) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type OrderDetail_Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OrderDetail_Property) Reset() {
	*x = OrderDetail_Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Property) ProtoMessage() {}

func (x *OrderDetail_Property) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Property.ProtoReflect.Descriptor instead.
func (*OrderDetail_Property) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 21}
}

func (x *OrderDetail_Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDetail_Property) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OrderDetail_Duty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HarmonizeSystemCode   string                        `protobuf:"bytes,2,opt,name=harmonize_system_code,json=harmonizeSystemCode,proto3" json:"harmonize_system_code,omitempty"`
	CountryCodeOfOriginal string                        `protobuf:"bytes,3,opt,name=country_code_of_original,json=countryCodeOfOriginal,proto3" json:"country_code_of_original,omitempty"`
	ShopMoney             *OrderDetail_ShopMoney        `protobuf:"bytes,4,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney      *OrderDetail_PresentmentMoney `protobuf:"bytes,5,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
	TaxLines              []*OrderDetail_TaxLine        `protobuf:"bytes,6,rep,name=tax_lines,json=taxLines,proto3" json:"tax_lines,omitempty"`
}

func (x *OrderDetail_Duty) Reset() {
	*x = OrderDetail_Duty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Duty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Duty) ProtoMessage() {}

func (x *OrderDetail_Duty) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Duty.ProtoReflect.Descriptor instead.
func (*OrderDetail_Duty) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 22}
}

func (x *OrderDetail_Duty) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail_Duty) GetHarmonizeSystemCode() string {
	if x != nil {
		return x.HarmonizeSystemCode
	}
	return ""
}

func (x *OrderDetail_Duty) GetCountryCodeOfOriginal() string {
	if x != nil {
		return x.CountryCodeOfOriginal
	}
	return ""
}

func (x *OrderDetail_Duty) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_Duty) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

func (x *OrderDetail_Duty) GetTaxLines() []*OrderDetail_TaxLine {
	if x != nil {
		return x.TaxLines
	}
	return nil
}

type OrderDetail_LineItem_DiscountAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount                   string                                             `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	DiscountApplicationIndex uint32                                             `protobuf:"varint,2,opt,name=discount_application_index,json=discountApplicationIndex,proto3" json:"discount_application_index,omitempty"`
	AmountSet                *OrderDetail_LineItem_DiscountAllocation_AmountSet `protobuf:"bytes,3,opt,name=amount_set,json=amountSet,proto3" json:"amount_set,omitempty"`
}

func (x *OrderDetail_LineItem_DiscountAllocation) Reset() {
	*x = OrderDetail_LineItem_DiscountAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_LineItem_DiscountAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_LineItem_DiscountAllocation) ProtoMessage() {}

func (x *OrderDetail_LineItem_DiscountAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_LineItem_DiscountAllocation.ProtoReflect.Descriptor instead.
func (*OrderDetail_LineItem_DiscountAllocation) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 11, 0}
}

func (x *OrderDetail_LineItem_DiscountAllocation) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderDetail_LineItem_DiscountAllocation) GetDiscountApplicationIndex() uint32 {
	if x != nil {
		return x.DiscountApplicationIndex
	}
	return 0
}

func (x *OrderDetail_LineItem_DiscountAllocation) GetAmountSet() *OrderDetail_LineItem_DiscountAllocation_AmountSet {
	if x != nil {
		return x.AmountSet
	}
	return nil
}

type OrderDetail_LineItem_DiscountAllocation_AmountSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *OrderDetail_ShopMoney        `protobuf:"bytes,1,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *OrderDetail_PresentmentMoney `protobuf:"bytes,2,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *OrderDetail_LineItem_DiscountAllocation_AmountSet) Reset() {
	*x = OrderDetail_LineItem_DiscountAllocation_AmountSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_LineItem_DiscountAllocation_AmountSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_LineItem_DiscountAllocation_AmountSet) ProtoMessage() {}

func (x *OrderDetail_LineItem_DiscountAllocation_AmountSet) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_LineItem_DiscountAllocation_AmountSet.ProtoReflect.Descriptor instead.
func (*OrderDetail_LineItem_DiscountAllocation_AmountSet) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 11, 0, 0}
}

func (x *OrderDetail_LineItem_DiscountAllocation_AmountSet) GetShopMoney() *OrderDetail_ShopMoney {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *OrderDetail_LineItem_DiscountAllocation_AmountSet) GetPresentmentMoney() *OrderDetail_PresentmentMoney {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type OrderDetail_Refund_RefundItemLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineItemId uint64 `protobuf:"varint,1,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"`
	Quantity   uint32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *OrderDetail_Refund_RefundItemLine) Reset() {
	*x = OrderDetail_Refund_RefundItemLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Refund_RefundItemLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Refund_RefundItemLine) ProtoMessage() {}

func (x *OrderDetail_Refund_RefundItemLine) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Refund_RefundItemLine.ProtoReflect.Descriptor instead.
func (*OrderDetail_Refund_RefundItemLine) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 13, 0}
}

func (x *OrderDetail_Refund_RefundItemLine) GetLineItemId() uint64 {
	if x != nil {
		return x.LineItemId
	}
	return 0
}

func (x *OrderDetail_Refund_RefundItemLine) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type OrderDetail_Customer_DefaultAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId   uint64 `protobuf:"varint,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	FirstName    string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName     string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Company      string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Zip          string `protobuf:"bytes,6,opt,name=zip,proto3" json:"zip,omitempty"`
	Phone        string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Name         string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	ProvinceCode string `protobuf:"bytes,9,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
	CountryCode  string `protobuf:"bytes,10,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryName  string `protobuf:"bytes,11,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	Default      bool   `protobuf:"varint,12,opt,name=default,proto3" json:"default,omitempty"`
	Address1     string `protobuf:"bytes,13,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2     string `protobuf:"bytes,14,opt,name=address2,proto3" json:"address2,omitempty"`
	City         string `protobuf:"bytes,15,opt,name=city,proto3" json:"city,omitempty"`
	Province     string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	Country      string `protobuf:"bytes,17,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *OrderDetail_Customer_DefaultAddress) Reset() {
	*x = OrderDetail_Customer_DefaultAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail_Customer_DefaultAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail_Customer_DefaultAddress) ProtoMessage() {}

func (x *OrderDetail_Customer_DefaultAddress) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail_Customer_DefaultAddress.ProtoReflect.Descriptor instead.
func (*OrderDetail_Customer_DefaultAddress) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1, 18, 0}
}

func (x *OrderDetail_Customer_DefaultAddress) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail_Customer_DefaultAddress) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *OrderDetail_Customer_DefaultAddress) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *OrderDetail_Customer_DefaultAddress) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *OrderDetail_Customer_DefaultAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x2e, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0xb2, 0x4b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x74, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61,
	0x78, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x65, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x29, 0x0a,
	0x10, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x73, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x30, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x31, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x15, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x34, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x35, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x36, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x37, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18,
	0x3c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x08,
	0x74, 0x61, 0x78, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x14, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x62,
	0x0a, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x41, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53,
	0x65, 0x74, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x53, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x44, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x10, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x53, 0x65, 0x74,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x53, 0x65, 0x74, 0x12, 0x37, 0x0a,
	0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x47, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x48, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x18, 0x49, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x07, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x70, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x19, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x74, 0x69, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x74, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53,
	0x65, 0x74, 0x52, 0x16, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x18, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x74, 0x69,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73,
	0x53, 0x65, 0x74, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x4f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x52, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a,
	0x8f, 0x02, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0xd1, 0x01, 0x0a, 0x07, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x53, 0x65, 0x74, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x1a, 0x93, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x4e, 0x0a, 0x0c, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x39, 0x0a, 0x0d, 0x4e,
	0x6f, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x9c, 0x01, 0x0a, 0x11, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74,
	0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0xa0, 0x01, 0x0a, 0x15, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x9b, 0x01, 0x0a,
	0x10, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x98, 0x01, 0x0a, 0x0d, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x96, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x61, 0x78, 0x53, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0xb1,
	0x0b, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x1c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12,
	0x4f, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x52, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x12, 0x5e, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2c, 0x0a, 0x06, 0x64, 0x75, 0x74, 0x69, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x44, 0x75, 0x74, 0x79, 0x52, 0x06, 0x64, 0x75, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x74, 0x61, 0x78,
	0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0xd7, 0x02, 0x0a, 0x12, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x54, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x1a, 0x94, 0x01, 0x0a, 0x09,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x1a, 0xe2, 0x01, 0x0a, 0x0b, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xc5, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x51, 0x0a, 0x11,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x0f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x1a,
	0x4e, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a,
	0xa1, 0x01, 0x0a, 0x16, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x1a, 0xa0, 0x01, 0x0a, 0x15, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x38, 0x0a,
	0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x4e, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0xa7, 0x03, 0x0a, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x7a, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x1a, 0xcd, 0x0a, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x70, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x14, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x65, 0x78,
	0x65, 0x6d, 0x70, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x61, 0x78, 0x45,
	0x78, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x3f, 0x0a, 0x1c, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x69,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x19,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0xda, 0x03, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x7a, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x1a, 0x48, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x4f, 0x0a, 0x10, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x34, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0xc2, 0x02, 0x0a, 0x04, 0x44, 0x75, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x61,
	0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x61, 0x72, 0x6d, 0x6f,
	0x6e, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x74, 0x61,
	0x78, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_order_proto_goTypes = []interface{}{
	(*Order)(nil),                                             // 0: pb.Order
	(*OrderDetail)(nil),                                       // 1: pb.OrderDetail
	(*OrderDetail_DiscountApplication)(nil),                   // 2: pb.OrderDetail.DiscountApplication
	(*OrderDetail_TaxLine)(nil),                               // 3: pb.OrderDetail.TaxLine
	(*OrderDetail_PriceSet)(nil),                              // 4: pb.OrderDetail.PriceSet
	(*OrderDetail_DiscountCode)(nil),                          // 5: pb.OrderDetail.DiscountCode
	(*OrderDetail_NoteAttribute)(nil),                         // 6: pb.OrderDetail.NoteAttribute
	(*OrderDetail_TotalLineItemsPriceSet)(nil),                // 7: pb.OrderDetail.TotalLineItemsPriceSet
	(*OrderDetail_TotalDiscountsSet)(nil),                     // 8: pb.OrderDetail.TotalDiscountsSet
	(*OrderDetail_TotalShippingPriceSet)(nil),                 // 9: pb.OrderDetail.TotalShippingPriceSet
	(*OrderDetail_SubTotalPriceSet)(nil),                      // 10: pb.OrderDetail.SubTotalPriceSet
	(*OrderDetail_TotalPriceSet)(nil),                         // 11: pb.OrderDetail.TotalPriceSet
	(*OrderDetail_TotalTaxSet)(nil),                           // 12: pb.OrderDetail.TotalTaxSet
	(*OrderDetail_LineItem)(nil),                              // 13: pb.OrderDetail.LineItem
	(*OrderDetail_Fulfillment)(nil),                           // 14: pb.OrderDetail.Fulfillment
	(*OrderDetail_Refund)(nil),                                // 15: pb.OrderDetail.Refund
	(*OrderDetail_OriginalTotalDutiesSet)(nil),                // 16: pb.OrderDetail.OriginalTotalDutiesSet
	(*OrderDetail_CurrentTotalDutiesSet)(nil),                 // 17: pb.OrderDetail.CurrentTotalDutiesSet
	(*OrderDetail_ShippingLine)(nil),                          // 18: pb.OrderDetail.ShippingLine
	(*OrderDetail_ShippingAddress)(nil),                       // 19: pb.OrderDetail.ShippingAddress
	(*OrderDetail_Customer)(nil),                              // 20: pb.OrderDetail.Customer
	(*OrderDetail_ShopMoney)(nil),                             // 21: pb.OrderDetail.ShopMoney
	(*OrderDetail_PresentmentMoney)(nil),                      // 22: pb.OrderDetail.PresentmentMoney
	(*OrderDetail_Property)(nil),                              // 23: pb.OrderDetail.Property
	(*OrderDetail_Duty)(nil),                                  // 24: pb.OrderDetail.Duty
	(*OrderDetail_LineItem_DiscountAllocation)(nil),           // 25: pb.OrderDetail.LineItem.DiscountAllocation
	(*OrderDetail_LineItem_DiscountAllocation_AmountSet)(nil), // 26: pb.OrderDetail.LineItem.DiscountAllocation.AmountSet
	(*OrderDetail_Refund_RefundItemLine)(nil),                 // 27: pb.OrderDetail.Refund.RefundItemLine
	(*OrderDetail_Customer_DefaultAddress)(nil),               // 28: pb.OrderDetail.Customer.DefaultAddress
}
var file_order_proto_depIdxs = []int32{
	1,  // 0: pb.Order.order:type_name -> pb.OrderDetail
	2,  // 1: pb.OrderDetail.discount_applications:type_name -> pb.OrderDetail.DiscountApplication
	5,  // 2: pb.OrderDetail.discount_codes:type_name -> pb.OrderDetail.DiscountCode
	6,  // 3: pb.OrderDetail.note_attributes:type_name -> pb.OrderDetail.NoteAttribute
	3,  // 4: pb.OrderDetail.tax_lines:type_name -> pb.OrderDetail.TaxLine
	7,  // 5: pb.OrderDetail.total_line_items_price_set:type_name -> pb.OrderDetail.TotalLineItemsPriceSet
	8,  // 6: pb.OrderDetail.total_discounts_set:type_name -> pb.OrderDetail.TotalDiscountsSet
	9,  // 7: pb.OrderDetail.total_shipping_price_set:type_name -> pb.OrderDetail.TotalShippingPriceSet
	10, // 8: pb.OrderDetail.subtotal_price_set:type_name -> pb.OrderDetail.SubTotalPriceSet
	11, // 9: pb.OrderDetail.total_price_set:type_name -> pb.OrderDetail.TotalPriceSet
	12, // 10: pb.OrderDetail.total_tax_set:type_name -> pb.OrderDetail.TotalTaxSet
	13, // 11: pb.OrderDetail.line_items:type_name -> pb.OrderDetail.LineItem
	14, // 12: pb.OrderDetail.fulfillments:type_name -> pb.OrderDetail.Fulfillment
	15, // 13: pb.OrderDetail.refunds:type_name -> pb.OrderDetail.Refund
	16, // 14: pb.OrderDetail.original_total_duties_set:type_name -> pb.OrderDetail.OriginalTotalDutiesSet
	17, // 15: pb.OrderDetail.current_total_duties_set:type_name -> pb.OrderDetail.CurrentTotalDutiesSet
	18, // 16: pb.OrderDetail.shipping_lines:type_name -> pb.OrderDetail.ShippingLine
	19, // 17: pb.OrderDetail.shipping_address:type_name -> pb.OrderDetail.ShippingAddress
	20, // 18: pb.OrderDetail.customer:type_name -> pb.OrderDetail.Customer
	4,  // 19: pb.OrderDetail.TaxLine.price_set:type_name -> pb.OrderDetail.PriceSet
	8,  // 20: pb.OrderDetail.TaxLine.total_discount_set:type_name -> pb.OrderDetail.TotalDiscountsSet
	21, // 21: pb.OrderDetail.PriceSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 22: pb.OrderDetail.PriceSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 23: pb.OrderDetail.TotalLineItemsPriceSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 24: pb.OrderDetail.TotalLineItemsPriceSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 25: pb.OrderDetail.TotalDiscountsSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 26: pb.OrderDetail.TotalDiscountsSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 27: pb.OrderDetail.TotalShippingPriceSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 28: pb.OrderDetail.TotalShippingPriceSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 29: pb.OrderDetail.SubTotalPriceSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 30: pb.OrderDetail.SubTotalPriceSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 31: pb.OrderDetail.TotalPriceSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 32: pb.OrderDetail.TotalPriceSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 33: pb.OrderDetail.TotalTaxSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 34: pb.OrderDetail.TotalTaxSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	23, // 35: pb.OrderDetail.LineItem.properties:type_name -> pb.OrderDetail.Property
	4,  // 36: pb.OrderDetail.LineItem.price_set:type_name -> pb.OrderDetail.PriceSet
	8,  // 37: pb.OrderDetail.LineItem.total_discount_set:type_name -> pb.OrderDetail.TotalDiscountsSet
	25, // 38: pb.OrderDetail.LineItem.discount_allocations:type_name -> pb.OrderDetail.LineItem.DiscountAllocation
	24, // 39: pb.OrderDetail.LineItem.duties:type_name -> pb.OrderDetail.Duty
	3,  // 40: pb.OrderDetail.LineItem.tax_lines:type_name -> pb.OrderDetail.TaxLine
	27, // 41: pb.OrderDetail.Refund.refund_item_lines:type_name -> pb.OrderDetail.Refund.RefundItemLine
	21, // 42: pb.OrderDetail.OriginalTotalDutiesSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 43: pb.OrderDetail.OriginalTotalDutiesSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	21, // 44: pb.OrderDetail.CurrentTotalDutiesSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 45: pb.OrderDetail.CurrentTotalDutiesSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	28, // 46: pb.OrderDetail.Customer.default_address:type_name -> pb.OrderDetail.Customer.DefaultAddress
	21, // 47: pb.OrderDetail.Duty.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 48: pb.OrderDetail.Duty.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	3,  // 49: pb.OrderDetail.Duty.tax_lines:type_name -> pb.OrderDetail.TaxLine
	26, // 50: pb.OrderDetail.LineItem.DiscountAllocation.amount_set:type_name -> pb.OrderDetail.LineItem.DiscountAllocation.AmountSet
	21, // 51: pb.OrderDetail.LineItem.DiscountAllocation.AmountSet.shop_money:type_name -> pb.OrderDetail.ShopMoney
	22, // 52: pb.OrderDetail.LineItem.DiscountAllocation.AmountSet.presentment_money:type_name -> pb.OrderDetail.PresentmentMoney
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_DiscountApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_TaxLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_PriceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_DiscountCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_NoteAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_TotalLineItemsPriceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_TotalDiscountsSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_TotalShippingPriceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_SubTotalPriceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_TotalPriceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_TotalTaxSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Fulfillment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_OriginalTotalDutiesSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_CurrentTotalDutiesSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_ShippingLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_ShippingAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_ShopMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_PresentmentMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Duty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_LineItem_DiscountAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_LineItem_DiscountAllocation_AmountSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Refund_RefundItemLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail_Customer_DefaultAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
